Express框架aaa bbb
上边实现的服务器对任何请求都返回Hello！文本，现实中服务器当然没那么简单。OTA服务器在接到请求时需要返回对应信息，并提供更新文件的下载接口。

Express 是一种保持最低程度规模的灵活 Node.js Web 应用程序框架，为 Web 和移动应用程序提供一组强大的功能。Express 提供的各种 HTTP 实用程序方法和中间件能帮助我们方便的处理网络请求。具体可参考官方文档

使用Express应用生成器快速搭建框架
使用以下命令安装 express：

npm install express-generator -g
输入如下命令，在当前目录下创建名为 ota 的 Express 应用

express --view=pug ota
看结果打印，在ota目录下自动创建了对应文件

'''
z@z-X556UF:~/dev/edge$ express --view=pug edge-1

   create : edge-1/
   create : edge-1/public/
   create : edge-1/public/javascripts/
   create : edge-1/public/images/
   create : edge-1/public/stylesheets/
   create : edge-1/public/stylesheets/style.css
   create : edge-1/routes/
   create : edge-1/routes/index.js
   create : edge-1/routes/users.js
   create : edge-1/views/
   create : edge-1/views/error.pug
   create : edge-1/views/index.pug
   create : edge-1/views/layout.pug
   create : edge-1/app.js
   create : edge-1/package.json
   create : edge-1/bin/
   create : edge-1/bin/www

   change directory:
     $ cd edge-1

   install dependencies:
     $ npm install

   run the app:
     $ DEBUG=edge-1:* npm start

'''

image1

cd 到 ota 目录下，安装需要的依赖

cd ota/
npm install
完成后，在node_modules目录下会下载好项目需要的第三方依赖模块

image2

项目的运行文件为 bin/www，打开查看源文件，可看到服务器运行端口默认情况下为 3000

image3

命令行运行服务器 

'''
Run nodemon to start the server.

z@z-X556UF:~/OTAServer$ nodemon SimpleServer.js 
[nodemon] 2.0.12
[nodemon] to restart at any time, enter `rs`
[nodemon] watching path(s): *.*
[nodemon] watching extensions: js,mjs,json
[nodemon] starting `node SimpleServer.js`
Server listening at port: 3001


'''

node bin/www 
浏览器打开网址 http://localhost:3000

Express框架默认生成的界面

'''
var http = require('http');
var fs = require("fs");

var UPDATE = 1;
var PORT = 8266;  //Set whatever port you want to listen on

console.log("Starting Nodejs ESP8266 OTA Update Server.");
console.log("Listening on 0.0.0.0:" +PORT.toString());
var server = http.createServer(function(request, response){

    if(request.url === "/update_light/update.bin"){
        user_agent = request.headers['user-agent']
        console.log("User-Agent:" + user_agent);

        if(UPDATE == 0){
            response.writeHead(304, {"Content-Type": "text/html"});
            response.end();
        }else{ //UPDATE
            //path_to_file = "..\\..\\..\\Desktop\\defiant-esp\\.pioenvs\\huzzah\\firmware.bin"
            path_to_file = "/home/z/dev/ota/update_light/update.bin"
            fs.readFile(path_to_file, "binary", function(err, file){
                if(err){
                    response.writeHead(500, {"Content-Type": "text/plain"});
                    response.write(err + "\n");
                    response.end();
                    return; 
                }//End Error Code
                //Write file to resposne

                //Get File Size
                var stats = fs.statSync(path_to_file);
                response.setHeader("Content-Type", "text/html");
                response.setHeader("Content-Disposition", "attachment");
                response.setHeader("Content-Length", stats.size.toString());
                response.write(file, "binary");
                response.end();
        //server.close();
        //UPDATE = 0; //disable the updates
                
        });
        }

        
    }else{
        console.log("Invalid uri...");
        response.writeHead(200, {"Content-Type": "text/html"});
        response.write("<html> <head><title>Invalid Uri</title></head><body>Invalid Uri</body></html>")
        response.end();
    }
   
});
server.listen(PORT);

,,,


http://localhost:3000/update_info?versionName=v01
























